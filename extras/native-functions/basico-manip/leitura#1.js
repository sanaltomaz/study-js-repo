/* ------------------------------------------------------------------------------------
# Leitura de Arquivos JSON no Node.js

## Introdu√ß√£o
No Node.js, podemos ler arquivos JSON de forma **s√≠ncrona** ou **ass√≠ncrona** utilizando o m√≥dulo `fs` (File System).  
Cada abordagem tem suas vantagens:
- **Leitura s√≠ncrona (`fs.readFileSync`)**: Bloqueia a execu√ß√£o at√© que a leitura seja conclu√≠da.
- **Leitura ass√≠ncrona (`fs.readFile`)**: Permite que outras opera√ß√µes continuem enquanto o arquivo √© lido.

------------------------------------------------------------------------------------ */

// Importando o m√≥dulo 'fs' para manipula√ß√£o de arquivos
const fs = require('fs');

// Caminho do arquivo JSON que ser√° lido
const caminhoArquivo = './dados.json'; //arquivo n√£o existe, vai dar erro

/* ------------------------------------------------------------------------------------
# Leitura S√≠ncrona - fs.readFileSync()
Essa abordagem l√™ o arquivo e retorna seu conte√∫do imediatamente.
Ela pode ser √∫til quando a leitura deve ocorrer antes de continuar a execu√ß√£o do c√≥digo.
------------------------------------------------------------------------------------ */
try {
    const dadosBrutos = fs.readFileSync(caminhoArquivo, 'utf-8'); // Lendo o arquivo
    const dadosJSON = JSON.parse(dadosBrutos); // Convertendo string JSON em objeto
    console.log("üìÑ Leitura S√≠ncrona:", dadosJSON);
} catch (erro) {
    console.error("‚ùå Erro na leitura s√≠ncrona:", erro);
}

/* ------------------------------------------------------------------------------------
# Leitura Ass√≠ncrona - fs.readFile()
Essa abordagem permite que a execu√ß√£o continue enquanto o arquivo √© lido.
Ela √© recomendada para evitar bloqueios em aplica√ß√µes que processam v√°rias tarefas ao mesmo tempo.
------------------------------------------------------------------------------------ */
fs.readFile(caminhoArquivo, 'utf-8', (erro, dadosBrutos) => {
    if (erro) {
        console.error("‚ùå Erro na leitura ass√≠ncrona:", erro);
        return;
    }

    try {
        const dadosJSON = JSON.parse(dadosBrutos); // Convertendo string JSON em objeto
        console.log("üìÑ Leitura Ass√≠ncrona:", dadosJSON);
    } catch (erro) {
        console.error("‚ùå Erro ao converter JSON:", erro);
    }
});

/* ------------------------------------------------------------------------------------
# Considera√ß√µes Finais:
- `fs.readFileSync()`: Simples e √∫til quando a leitura deve ocorrer antes de outras opera√ß√µes.
- `fs.readFile()`: Melhor para desempenho, pois n√£o bloqueia o c√≥digo.
- Escolha a abordagem conforme a necessidade da sua aplica√ß√£o.

------------------------------------------------------------------------------------ */
